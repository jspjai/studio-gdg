'use client';

import { format } from 'date-fns';
import { ShieldCheck, ShieldX, AlertTriangle, ChevronsRight, FileText } from 'lucide-react';
import type { ScanHistoryItem } from '@/lib/types';
import {
  Accordion,
  AccordionContent,
  AccordionItem,
  AccordionTrigger,
} from '@/components/ui/accordion';
import { Badge } from '@/components/ui/badge';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { getSeverityBadgeClass } from '@/lib/utils';
import { Separator } from '../ui/separator';

interface VulnerabilityReportProps {
  scanItem: ScanHistoryItem;
}

export default function VulnerabilityReport({ scanItem }: VulnerabilityReportProps) {
  const { targetUrl, scanDate, riskScore, report } = scanItem;
  const { reportSummary, vulnerabilities, authenticationCheckPassed, authenticationCheckDetails } = report;

  const countSeverity = (severity: string) => vulnerabilities.filter(v => v.severity === severity).length;
  const criticalCount = countSeverity('Critical');
  const highCount = countSeverity('High');
  const mediumCount = countSeverity('Medium');
  const lowCount = countSeverity('Low');

  return (
    <div className="space-y-6">
      <div>
        <h1 className="text-3xl font-bold tracking-tight break-all">Scan Report for {targetUrl}</h1>
        <p className="text-muted-foreground">
          Scanned on {format(new Date(scanDate), 'PPP p')}
        </p>
      </div>

      <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-4">
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Risk Score</CardTitle>
            <AlertTriangle className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{riskScore}</div>
            <p className="text-xs text-muted-foreground">Overall risk assessment score</p>
          </CardContent>
        </Card>
        <Card className="border-red-500/50">
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Critical</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{criticalCount}</div>
            <p className="text-xs text-muted-foreground">Critical vulnerabilities</p>
          </CardContent>
        </Card>
        <Card className="border-orange-500/50">
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">High</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{highCount + mediumCount}</div>
            <p className="text-xs text-muted-foreground">High & Medium vulnerabilities</p>
          </CardContent>
        </Card>
        <Card className="border-blue-500/50">
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Low</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{lowCount}</div>
            <p className="text-xs text-muted-foreground">Low severity issues</p>
          </CardContent>
        </Card>
      </div>

      <div className="grid gap-6 md:grid-cols-3">
        <Card className="md:col-span-2">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <FileText className="h-5 w-5" />
              Scan Summary
            </CardTitle>
          </CardHeader>
          <CardContent>
            <p className="text-muted-foreground">{reportSummary}</p>
          </CardContent>
        </Card>
        <Card className={authenticationCheckPassed ? 'border-green-500/50' : 'border-yellow-500/50'}>
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              {authenticationCheckPassed ? <ShieldCheck className="h-5 w-5 text-green-500" /> : <ShieldX className="h-5 w-5 text-yellow-500" />}
              Authentication Check
            </CardTitle>
          </CardHeader>
          <CardContent>
            <p className="font-semibold text-lg">{authenticationCheckPassed ? 'Passed' : 'Failed'}</p>
            {authenticationCheckDetails && <p className="text-sm text-muted-foreground">{authenticationCheckDetails}</p>}
          </CardContent>
        </Card>
      </div>


      <Card>
        <CardHeader>
          <CardTitle>Vulnerabilities Found ({vulnerabilities.length})</CardTitle>
        </CardHeader>
        <CardContent>
          {vulnerabilities.length > 0 ? (
            <Accordion type="single" collapsible className="w-full">
              {vulnerabilities.map((vuln, index) => (
                <AccordionItem value={`item-${index}`} key={index}>
                  <AccordionTrigger>
                    <div className="flex items-center gap-4 flex-1 text-left">
                      <Badge className={getSeverityBadgeClass(vuln.severity)}>{vuln.severity}</Badge>
                      <span className="font-semibold">{vuln.vulnerability}</span>
                    </div>
                  </AccordionTrigger>
                  <AccordionContent className="space-y-4 px-2">
                    <div>
                      <h4 className="font-semibold text-foreground">Description</h4>
                      <p className="text-muted-foreground">{vuln.description}</p>
                    </div>
                    <Separator />
                    <div>
                      <h4 className="font-semibold text-foreground">Remediation Steps</h4>
                      <div className="prose prose-sm dark:prose-invert max-w-none text-muted-foreground whitespace-pre-wrap">
                       {vuln.remediation.split('\n').map((step, i) => (
                          step.trim() && <p key={i} className="flex items-start gap-2"><ChevronsRight className="w-4 h-4 mt-1 shrink-0 text-accent" /><span>{step}</span></p>
                       ))}
                      </div>
                    </div>
                  </AccordionContent>
                </AccordionItem>
              ))}
            </Accordion>
          ) : (
            <div className="text-center py-8">
              <ShieldCheck className="mx-auto h-12 w-12 text-green-500" />
              <p className="mt-4 font-semibold">No vulnerabilities found.</p>
              <p className="text-muted-foreground">The scan completed without identifying any security issues.</p>
            </div>
          )}
        </CardContent>
      </Card>
    </div>
  );
}
