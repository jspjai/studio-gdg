// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Provides AI-generated, step-by-step instructions and best practices for addressing
 * and fixing identified vulnerabilities.
 *
 * - suggestRemediationSteps - A function that suggests remediation steps for a given vulnerability.
 * - SuggestRemediationStepsInput - The input type for the suggestRemediationSteps function.
 * - SuggestRemediationStepsOutput - The return type for the suggestRemediationSteps function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestRemediationStepsInputSchema = z.object({
  vulnerabilityDescription: z
    .string()
    .describe('A detailed description of the vulnerability identified.'),
  targetUrl: z.string().describe('The URL of the target web application.'),
  vulnerabilityType: z.string().describe('The type of vulnerability (e.g., SQL Injection, XSS).'),
});
export type SuggestRemediationStepsInput = z.infer<
  typeof SuggestRemediationStepsInputSchema
>;

const SuggestRemediationStepsOutputSchema = z.object({
  remediationSteps: z
    .string()
    .describe(
      'A list of step-by-step instructions and best practices for addressing and fixing the identified vulnerability.'
    ),
});
export type SuggestRemediationStepsOutput = z.infer<
  typeof SuggestRemediationStepsOutputSchema
>;

export async function suggestRemediationSteps(
  input: SuggestRemediationStepsInput
): Promise<SuggestRemediationStepsOutput> {
  return suggestRemediationStepsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestRemediationStepsPrompt',
  input: {schema: SuggestRemediationStepsInputSchema},
  output: {schema: SuggestRemediationStepsOutputSchema},
  prompt: `You are an expert security engineer. Provide clear, step-by-step instructions and best practices for addressing and fixing the following vulnerability in the context of the target URL.

Vulnerability Type: {{{vulnerabilityType}}}
Vulnerability Description: {{{vulnerabilityDescription}}}
Target URL: {{{targetUrl}}}

Provide remediation steps that are easy to understand and implement. Consider the target URL when generating the steps.

Remediation Steps:`,
});

const suggestRemediationStepsFlow = ai.defineFlow(
  {
    name: 'suggestRemediationStepsFlow',
    inputSchema: SuggestRemediationStepsInputSchema,
    outputSchema: SuggestRemediationStepsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
